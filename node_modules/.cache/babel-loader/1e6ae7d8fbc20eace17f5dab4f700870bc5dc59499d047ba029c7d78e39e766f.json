{"ast":null,"code":"import { isTouchEvent } from './predicates.js';\nconst ELEMENT_NODE = 1;\nexport function getNodeClientOffset(node) {\n  const el = node.nodeType === ELEMENT_NODE ? node : node.parentElement;\n  if (!el) {\n    return undefined;\n  }\n  const {\n    top,\n    left\n  } = el.getBoundingClientRect();\n  return {\n    x: left,\n    y: top\n  };\n}\nexport function getEventClientTouchOffset(e, lastTargetTouchFallback) {\n  if (e.targetTouches.length === 1) {\n    return getEventClientOffset(e.targetTouches[0]);\n  } else if (lastTargetTouchFallback && e.touches.length === 1) {\n    if (e.touches[0].target === lastTargetTouchFallback.target) {\n      return getEventClientOffset(e.touches[0]);\n    }\n  }\n  return;\n}\nexport function getEventClientOffset(e, lastTargetTouchFallback) {\n  if (isTouchEvent(e)) {\n    return getEventClientTouchOffset(e, lastTargetTouchFallback);\n  } else {\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n}","map":{"version":3,"names":["isTouchEvent","ELEMENT_NODE","getNodeClientOffset","node","el","nodeType","parentElement","undefined","top","left","getBoundingClientRect","x","y","getEventClientTouchOffset","e","lastTargetTouchFallback","targetTouches","length","getEventClientOffset","touches","target","clientX","clientY"],"sources":["C:\\Users\\oyeti\\Documents\\GitHub\\HNG_Stage-Three\\node_modules\\react-dnd-touch-backend\\src\\utils\\offsets.ts"],"sourcesContent":["import type { XYCoord } from 'dnd-core'\n\nimport { isTouchEvent } from './predicates.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Element): XYCoord | undefined {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\tif (!el) {\n\t\treturn undefined\n\t}\n\tconst { top, left } = el.getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientTouchOffset(\n\te: TouchEvent,\n\tlastTargetTouchFallback?: Touch,\n): XYCoord | undefined {\n\tif (e.targetTouches.length === 1) {\n\t\treturn getEventClientOffset(e.targetTouches[0] as Touch)\n\t} else if (lastTargetTouchFallback && e.touches.length === 1) {\n\t\tif ((e.touches[0] as Touch).target === lastTargetTouchFallback.target) {\n\t\t\treturn getEventClientOffset(e.touches[0] as Touch)\n\t\t}\n\t}\n\treturn\n}\n\nexport function getEventClientOffset(\n\te: TouchEvent | Touch | MouseEvent,\n\tlastTargetTouchFallback?: Touch,\n): XYCoord | undefined {\n\tif (isTouchEvent(e)) {\n\t\treturn getEventClientTouchOffset(e, lastTargetTouchFallback)\n\t} else {\n\t\treturn {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t}\n\t}\n}\n"],"mappings":"AAEA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,MAAMC,YAAY,GAAG,CAAC;AAEtB,OAAO,SAASC,mBAAmBA,CAACC,IAAa,EAAuB;EACvE,MAAMC,EAAE,GAAGD,IAAI,CAACE,QAAQ,KAAKJ,YAAY,GAAGE,IAAI,GAAGA,IAAI,CAACG,aAAa;EACrE,IAAI,CAACF,EAAE,EAAE;IACR,OAAOG,SAAS;;EAEjB,MAAM;IAAEC,GAAG;IAAEC;EAAI,CAAE,GAAGL,EAAE,CAACM,qBAAqB,EAAE;EAChD,OAAO;IAAEC,CAAC,EAAEF,IAAI;IAAEG,CAAC,EAAEJ;GAAK;;AAG3B,OAAO,SAASK,yBAAyBA,CACxCC,CAAa,EACbC,uBAA+B,EACT;EACtB,IAAID,CAAC,CAACE,aAAa,CAACC,MAAM,KAAK,CAAC,EAAE;IACjC,OAAOC,oBAAoB,CAACJ,CAAC,CAACE,aAAa,CAAC,CAAC,CAAC,CAAU;GACxD,MAAM,IAAID,uBAAuB,IAAID,CAAC,CAACK,OAAO,CAACF,MAAM,KAAK,CAAC,EAAE;IAC7D,IAAIH,CAAE,CAACK,OAAO,CAAC,CAAC,CAAC,CAAWC,MAAM,KAAKL,uBAAuB,CAACK,MAAM,EAAE;MACtE,OAAOF,oBAAoB,CAACJ,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAAU;;;EAGpD;;AAGD,OAAO,SAASD,oBAAoBA,CACnCJ,CAAkC,EAClCC,uBAA+B,EACT;EACtB,IAAIf,YAAY,CAACc,CAAC,CAAC,EAAE;IACpB,OAAOD,yBAAyB,CAACC,CAAC,EAAEC,uBAAuB,CAAC;GAC5D,MAAM;IACN,OAAO;MACNJ,CAAC,EAAEG,CAAC,CAACO,OAAO;MACZT,CAAC,EAAEE,CAAC,CAACQ;KACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}