{"ast":null,"code":"import _classCallCheck from \"C:/Users/oyeti/Documents/GitHub/HNG_Stage-Three/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/oyeti/Documents/GitHub/HNG_Stage-Three/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\nexport var DragSourceMonitorImpl = /*#__PURE__*/function () {\n  function DragSourceMonitorImpl(manager) {\n    _classCallCheck(this, DragSourceMonitorImpl);\n    this.sourceId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n  _createClass(DragSourceMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(sourceId) {\n      this.sourceId = sourceId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.sourceId;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n      try {\n        isCallingCanDrag = true;\n        return this.internalMonitor.canDragSource(this.sourceId);\n      } finally {\n        isCallingCanDrag = false;\n      }\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      if (!this.sourceId) {\n        return false;\n      }\n      invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n      try {\n        isCallingIsDragging = true;\n        return this.internalMonitor.isDraggingSource(this.sourceId);\n      } finally {\n        isCallingIsDragging = false;\n      }\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      return this.internalMonitor.isDraggingSource(sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId, options) {\n      return this.internalMonitor.isOverTarget(targetId, options);\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.internalMonitor.getTargetIds();\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return this.internalMonitor.isSourcePublic();\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.internalMonitor.getSourceId();\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      return this.internalMonitor.canDragSource(sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      return this.internalMonitor.canDropOnTarget(targetId);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n  return DragSourceMonitorImpl;\n}();","map":{"version":3,"names":["invariant","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","manager","_classCallCheck","sourceId","internalMonitor","getMonitor","_createClass","key","value","receiveHandlerId","getHandlerId","canDrag","canDragSource","isDragging","isDraggingSource","subscribeToStateChange","listener","options","isOverTarget","targetId","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset"],"sources":["C:\\Users\\oyeti\\Documents\\GitHub\\HNG_Stage-Three\\node_modules\\react-dnd\\src\\internals\\DragSourceMonitorImpl.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}