{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oyeti\\\\Documents\\\\HNG X Internship\\\\practice\\\\src\\\\components\\\\Images.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Image.css';\nimport { useState } from \"react\";\nimport img1 from '../img/pexels_1.jpg';\nimport img2 from '../img/pexels_2.jpg';\nimport img3 from '../img/pexels_3.jpg';\nimport img4 from '../img/pexels_4.jpg';\nimport img5 from '../img/pexels_5.jpg';\nimport img6 from '../img/pexels_6.jpg';\nimport img7 from '../img/pexels_7.jpg';\nimport img8 from '../img/pexels_8.jpg';\nimport img9 from '../img/pexels_9.jpg';\nimport img10 from '../img/pexels_10.jpg';\nimport img11 from '../img/pexels_11.jpg';\nimport img12 from '../img/pexels_12.jpg';\nimport img13 from '../img/pexels_13.jpg';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Skeleton from 'react-loading-skeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Images() {\n  _s();\n  const initialImages = [{\n    id: 'image1',\n    src: img1\n  }, {\n    id: 'image2',\n    src: img2\n  }, {\n    id: 'image3',\n    src: img3\n  }, {\n    id: 'image4',\n    src: img4\n  }, {\n    id: 'image5',\n    src: img5\n  }, {\n    id: 'image6',\n    src: img6\n  }, {\n    id: 'image7',\n    src: img7\n  }, {\n    id: 'image8',\n    src: img8\n  }, {\n    id: 'image9',\n    src: img9\n  }, {\n    id: 'image10',\n    src: img10\n  }, {\n    id: 'image11',\n    src: img11\n  }, {\n    id: 'image12',\n    src: img12\n  }, {\n    id: 'image13',\n    src: img13\n  }];\n  const [images, setImages] = useState(initialImages);\n  const handleDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const updatedImages = [...images];\n    const [reorderedImage] = updatedImages.splice(result.source.index, 1);\n    updatedImages.splice(result.destination.index, 0, reorderedImage);\n    setImages(updatedImages);\n  };\n  useEffect(() => {\n    // Simulate an asynchronous image loading process\n    setTimeout(() => {\n      // Replace this with your actual image loading logic\n      // Once images are loaded, set loading to false\n      setLoading(false);\n    }, 2000); // Adjust the time to simulate loading as needed\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-gallery\",\n    children: loading ?\n    /*#__PURE__*/\n    // Use react-loading-skeleton for skeleton loader\n    _jsxDEV(\"div\", {\n      className: \"loader\",\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        width: 200,\n        height: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: 200,\n        height: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgContainer\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"image-list\",\n          direction: \"horizontal\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            className: \"image-list\",\n            children: images.map((image, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: image.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: \"listed\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image.src,\n                  alt: `Index: ${index + 1}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, image.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Images, \"IlzshQG9kXTg80H42QcavEvGeIA=\");\n_c = Images;\nexport default Images;\nvar _c;\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"names":["React","useState","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","img13","DragDropContext","Droppable","Draggable","Skeleton","jsxDEV","_jsxDEV","Images","_s","initialImages","id","src","images","setImages","handleDragEnd","result","destination","updatedImages","reorderedImage","splice","source","index","useEffect","setTimeout","setLoading","className","children","loading","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","droppableId","direction","provided","droppableProps","ref","innerRef","map","image","draggableId","draggableProps","dragHandleProps","alt","_c","$RefreshReg$"],"sources":["C:/Users/oyeti/Documents/HNG X Internship/practice/src/components/Images.js"],"sourcesContent":["import React from 'react'\r\nimport './Image.css';\r\nimport { useState } from \"react\";\r\nimport img1 from '../img/pexels_1.jpg';\r\nimport img2 from '../img/pexels_2.jpg';\r\nimport img3 from '../img/pexels_3.jpg';\r\nimport img4 from '../img/pexels_4.jpg';\r\nimport img5 from '../img/pexels_5.jpg';\r\nimport img6 from '../img/pexels_6.jpg';\r\nimport img7 from '../img/pexels_7.jpg';\r\nimport img8 from '../img/pexels_8.jpg';\r\nimport img9 from '../img/pexels_9.jpg';\r\nimport img10 from '../img/pexels_10.jpg';\r\nimport img11 from '../img/pexels_11.jpg';\r\nimport img12 from '../img/pexels_12.jpg';\r\nimport img13 from '../img/pexels_13.jpg';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nfunction Images() {\r\n\r\n    const initialImages = [\r\n        { id: 'image1', src: img1 },\r\n        { id: 'image2', src: img2 },\r\n        { id: 'image3', src: img3 },\r\n        { id: 'image4', src: img4 },\r\n        { id: 'image5', src: img5 },\r\n        { id: 'image6', src: img6 },\r\n        { id: 'image7', src: img7 },\r\n        { id: 'image8', src: img8 },\r\n        { id: 'image9', src: img9 },\r\n        { id: 'image10', src: img10 },\r\n        { id: 'image11', src: img11 },\r\n        { id: 'image12', src: img12 },\r\n        { id: 'image13', src: img13 },\r\n        \r\n      ];\r\n      \r\n      const [images, setImages] = useState(initialImages);\r\n\r\n\r\n\r\n\r\n      const handleDragEnd = (result) => {\r\n        if (!result.destination) {\r\n          return;\r\n        }\r\n      \r\n        const updatedImages = [...images];\r\n        const [reorderedImage] = updatedImages.splice(result.source.index, 1);\r\n        updatedImages.splice(result.destination.index, 0, reorderedImage);\r\n      \r\n        setImages(updatedImages);\r\n      };\r\n\r\n      useEffect(() => {\r\n        // Simulate an asynchronous image loading process\r\n        setTimeout(() => {\r\n          // Replace this with your actual image loading logic\r\n          // Once images are loaded, set loading to false\r\n          setLoading(false);\r\n        }, 2000); // Adjust the time to simulate loading as needed\r\n      }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"image-gallery\">\r\n    {loading ? (\r\n      // Use react-loading-skeleton for skeleton loader\r\n      <div className=\"loader\">\r\n        <Skeleton width={200} height={200} />\r\n        <Skeleton width={200} height={200} />\r\n        {/* Repeat as needed */}\r\n      </div>\r\n    ) : (\r\n\r\n        <div className='imgContainer'>\r\n\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n        <Droppable droppableId=\"image-list\" direction=\"horizontal\">\r\n        {(provided) => (\r\n            <div\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n            className=\"image-list\"\r\n            >\r\n            {images.map((image, index) => (\r\n                <Draggable key={image.id} draggableId={image.id} index={index}>\r\n                {(provided) => (\r\n                    <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    className='listed'\r\n                    >\r\n                    <img src={image.src} alt={`Index: ${index + 1}`} />\r\n                    </div>\r\n                )}\r\n                </Draggable>\r\n            ))}\r\n            </div>\r\n        )}\r\n        </Droppable>\r\n    </DragDropContext>\r\n        </div>\r\n    )}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Images;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}